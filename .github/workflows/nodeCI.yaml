name: nodeCI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: clientesdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready -U postgres
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env: # üîë usado pelo Node e pelo Jest
      PGUSER: postgres
      PGPASSWORD: postgres
      PGDATABASE: clientesdb
      PGHOST: 127.0.0.1
      PGPORT: 5432

    steps:
      # 1Ô∏è‚É£ Checkout do reposit√≥rio
      - uses: actions/checkout@v3

      # 2Ô∏è‚É£ Configurar Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 3Ô∏è‚É£ Instalar depend√™ncias
      - name: Install dependencies
        run: npm ci --include=dev

      # 4Ô∏è‚É£ Criar tabelas a partir do init.sql
      - name: Run init.sql
        run: psql -h 127.0.0.1 -U postgres -d clientesdb -f init.sql

      # 5Ô∏è‚É£ Rodar testes (Jest ou outro runner)
      - name: Run tests
        run: npm test

      # 6Ô∏è‚É£ Executar migrations se houver
      - name: Execute migrations
        run: npm run migrate || echo "No migrations script found"

      # 7Ô∏è‚É£ Build do projeto se houver
      - name: Build project
        run: npm run build || echo "No build script found"
